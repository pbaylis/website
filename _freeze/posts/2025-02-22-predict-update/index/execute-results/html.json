{
  "hash": "fd2e86b7186a7579dd49f73670fc2363",
  "result": {
    "engine": "knitr",
    "markdown": "bn---\ntitle: \"New dataset: Daily average online sentiment by county\"\ndescription: \"Releasing a dataset used in several of my papers\"\nauthor: \"Patrick Baylis\"\ndate: 2025-02-22\ndraft: false\nformat: \n  html:\n    page-layout: full\ncategories:\n  - data\n\n---\n\nIn a [2021 post](/posts/2021-01-22-predict-partial/) I showed a workaround for plotting **partial predictions** from models with fixed effects—useful when we need a response function without the (unplottable) fixed effects. This short update uses the modern, well-documented `marginaleffects` API on top of `fixest` to generate **predictions** directly and plot them with uncertainty.\n\n### Why environmental folks should care\n\nWe routinely estimate nonlinear dose–response relationships with **high-dimensional fixed effects** (unit, time) and then want to visualize the **policy-relevant response function**: e.g., *How does mortality risk evolve over the temperature distribution, holding humidity fixed?*\n\nBelow is a minimal, reproducible example with **temperature** and **relative humidity**, plus **county fixed effects**. Swap the outcome for mortality, ER visits, labor productivity—whatever your setting—without changing the workflow.\n\n## Setup\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(fixest)\nlibrary(marginaleffects)\nlibrary(ggplot2)\n\nset.seed(42)\n\n# --- Simulate panel data: 50 counties x 200 days ---\nn_county <- 50\nn_day    <- 200\ncounty   <- factor(rep(paste0(\"c\", 1:n_county), each = n_day))\nday      <- rep(1:n_day, times = n_county)\n\n# Weather: temperature (°C) & relative humidity (%)\ntemp <- 10 + 10 * sin(2*pi*day/200) + rnorm(n_county*n_day, 0, 3)\nrh   <- 50 + 15 * cos(2*pi*day/200) + rnorm(n_county*n_day, 0, 7)\n\n# Outcome: nonlinear in temp, modest in RH, county FE\n# Think: log mortality, log ER admissions, or electricity demand\ny <- 0.1*temp - 0.003*temp^2 + 0.002*rh + 0.0005*temp*rh + \n     rnorm(n_county*n_day, 0, 0.5) + rnorm(n_county, 0, 0.6)[county]\n\ndat <- data.frame(y, temp, rh, county, day)\n\n# Flexible model with county fixed effects and nonlinear terms\n# (Include interaction to allow humidity to modulate heat effects)\nmod <- feols(y ~ temp + I(temp^2) + rh + temp:rh | county, data = dat)\nsummary(mod)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nOLS estimation, Dep. Var.: y\nObservations: 10,000 \nFixed-effects: county: 50\nStandard-errors: Clustered (county) \n           Estimate Std. Error   t value   Pr(>|t|)    \ntemp       0.099634   0.003555  28.02696  < 2.2e-16 ***\nI(temp^2) -0.002994   0.000097 -30.95988  < 2.2e-16 ***\nrh         0.001701   0.000718   2.36837 2.1855e-02 *  \ntemp:rh    0.000514   0.000059   8.64719 1.9909e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nRMSE: 0.505792     Adj. R2: 0.723522\n                 Within R2: 0.537695\n```\n\n\n:::\n:::\n\n## Response function (levels) at RH = 40%\n\n::: {.cell}\n\n```{.r .cell-code}\ngrid <- data.frame(\n  temp   = seq(5, 35, by = 1),\n  rh     = 40,\n  county = factor(\"c1\", levels = levels(dat$county))\n)\n\npr <- marginaleffects::predictions(mod, newdata = grid)\n\nggplot(pr, aes(x = temp, y = estimate)) +\n  geom_line() +\n  geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = 0.2) +\n  labs(\n    title = \"Response Function f(temp)\",\n    subtitle = \"Levels: E[y|X] with county FE; evaluated at RH = 40%\",\n    x = \"Temperature (°C)\",\n    y = \"E[y|X]\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n## Overlay: humidity modulation (30%, 50%, 70%)\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nrh_vals <- c(30, 50, 70)\ngrid_multi <- expand.grid(\n  temp   = seq(5, 35, by = 1),\n  rh     = rh_vals\n) |>\n  mutate(county = factor(\"c1\", levels = levels(dat$county)))\n\npr_multi <- marginaleffects::predictions(mod, newdata = grid_multi) |>\n  mutate(rh = factor(rh, levels = rh_vals))\n\nggplot(pr_multi, aes(x = temp, y = estimate, color = rh, fill = rh)) +\n  geom_line() +\n  geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = 0.15, linewidth = 0) +\n  labs(\n    title = \"Response Function f(temp) across RH levels\",\n    subtitle = \"County FE model; E[y|X] evaluated at RH ∈ {30, 50, 70}%\",\n    x = \"Temperature (°C)\",\n    y = \"E[y|X]\",\n    color = \"RH (%)\",\n    fill  = \"RH (%)\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n## Interpretation & extensions\n\n- The lines trace the **predicted outcome** at each °C, holding RH fixed. Nonlinearities (quadratic + interaction) shape the curve.\n- Replace `county` with **unit × time FE** (e.g., `| county + factor(day)`), or add seasonality and trends as needed.\n- To study humidity modulation, vary the `rh` value in `grid` and overlay multiple curves (as above).\n\n## Common pitfalls\n\n- Wrap polynomial terms with `I()` (e.g., `I(temp^2)`) so R treats them as arithmetic.\n- Ensure **factor levels** in `newdata` match the modeling data (`factor(..., levels = levels(dat$factor))`).\n- Predictions do not include FE uncertainty; interpret them as conditional on the chosen FE level.\n\n## References\n\n- `fixest` documentation: `?feols`\n- `marginaleffects` vignettes: `vignette(\"marginaleffects\")` and `?predictions`\n\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}