{
  "hash": "7e348e0de567dc2e351200a6fc30c7af",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Response functions with fixed effects\"\ndescription: \"Using fixest + marginaleffects to plot response functions with fixed effects\"\nauthor: \"Patrick Baylis\"\ndate: 2025-09-25\ndraft: true\nformat: \n  html:\n    page-layout: full\ncategories:\n  - data\n---\n\n\nIn a [2021 post](/posts/2021-01-22-predict-partial/) I shared code for plotting **partial predictions** from models with high-dimensional fixed effects (like those produced by [fixest](https://lrberge.github.io/fixest/)), which is useful when we need a to plot a response function for how some outcome changes with respect to temperature. I am happy to report that that code is now basically obsolete thanks to the [marginaleffects](https://github.com/vincentarelbundock/marginaleffects) package. This post shows how to plot such functions. \n\n### A quick review\n\nTemperature affects a lot of stuff. Researchers working in climate impacts often want to examine how an outcome is affected by temperature. For example, a relationship of significant interest to our literature is the link between temperature and mortality (TODO ADD CITES). The thing is, there's a lot of good medical reasons to think that the effect might be **non-linear**, i.e., that mortality might be higher when it's cold or hot than when the temperature is moderate. Finally, we might want to control for correlations between the outcome and climate that aren't actually a result of the temperature, such as that Miami might just have higher mortality rates than Minnesota.\n\nIn econometric-speak, a generic form of a model we could use to investigate this relationship (using only unit fixed effects for brevity) is:\n\n$$y_{it} = f(T; \\beta) + \\phi_i + \\varepsilon_{it}$$\n\nwhere $y_{it}$ is the outcome of interest (e.g., log mortality), $f(T; \\beta)$ is a flexible function of temperature (e.g., polynomial, splines), $\\phi_i$ are unit fixed effects, and $\\varepsilon_{it}$ is an error term. \n\nOur task is to reproduce an estimate of $f(T; \\beta)$ that, holding everything else equal, shows how the outcome changes with temperature *relative to some baseline temperature*. We also want to get a sense of our certainty around that estimate, i.e., a confidence interval. That's what I wrote a bunch of code back in 2021 to do, but now marginaleffects::prediction can do it for us.\n\n### Simulation\n\nWe'll simulate this with a made-up outcome and temperature data, so we can control the \"data-generating process.\" and confirm that the model is reproducing what we are hoping for. We'll also throw an extra element: we'll allow the outcome to be affected by humidity as well, and the *interaction* of temperature and humidity. This is meant to capture the fact that humans tend to be more affected by heat when humidity is higher. The following generates the made-up data and estimates the appropriate model to extract $f(T)$. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(fixest)\nlibrary(marginaleffects)\nlibrary(ggplot2)\n\nset.seed(42)\n\n# --- Simulate panel data: 50 counties x 200 days ---\nn_county <- 50\nn_day    <- 200\ncounty   <- factor(rep(paste0(\"c\", 1:n_county), each = n_day))\nday      <- rep(1:n_day, times = n_county)\n\n# Weather: temperature (C) & relative humidity (%)\ntemp <- 10 + 10 * sin(2*pi*day/200) + rnorm(n_county*n_day, 0, 3)\nrh   <- 50 + 15 * cos(2*pi*day/200) + rnorm(n_county*n_day, 0, 7)\n\n# Outcome: nonlinear in temp, modest in RH, county FE\ny <- 0.1*temp - 0.003*temp^2 + 0.002*rh + 0.0005*temp*rh + \n     rnorm(n_county*n_day, 0, 0.5) + rnorm(n_county, 0, 0.6)[county]\n\ndat <- data.frame(y, temp, rh, county, day)\n\n# Flexible model with county fixed effects and nonlinear terms\n# (Include interaction to allow humidity to modulate heat effects)\nmod <- feols(y ~ temp + I(temp^2) + rh + temp:rh | county, data = dat)\nsummary(mod)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nOLS estimation, Dep. Var.: y\nObservations: 10,000 \nFixed-effects: county: 50\nStandard-errors: Clustered (county) \n           Estimate Std. Error   t value   Pr(>|t|)    \ntemp       0.099634   0.003555  28.02696  < 2.2e-16 ***\nI(temp^2) -0.002994   0.000097 -30.95988  < 2.2e-16 ***\nrh         0.001701   0.000718   2.36837 2.1855e-02 *  \ntemp:rh    0.000514   0.000059   8.64719 1.9909e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nRMSE: 0.505792     Adj. R2: 0.723522\n                 Within R2: 0.537695\n```\n\n\n:::\n:::\n\n\n### Plot the response function\n\nNow we want to plot the response function with the `predictions` function from the `marginaleffects` package. We create some fake data (which needs to include *all* the variables in the model, but only temperature needs to vary). \n\nTODO: I don't know how to get the CI to be 0 at some holdout value. So I guess I don't really know what we're producing here. Maybe I actually want comparisons? I guess I need to read the stupid manual.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrid <- data.frame(\n  temp   = seq(0, 35, by = 1),\n  rh     = 40,\n  county = factor(\"c1\", levels = levels(dat$county))\n)\n\npr <- marginaleffects::predictions(mod, newdata = grid)\n\nggplot(pr, aes(x = temp, y = estimate)) +\n  geom_line() +\n  geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = 0.2) +\n  labs(\n    title = \"Response Function f(temp)\",\n    subtitle = \"Levels: E[y|X] with county FE; evaluated at RH = 40%\",\n    x = \"Temperature (°C)\",\n    y = \"E[y|X]\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n## Overlay: humidity modulation (30%, 50%, 70%)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nrh_vals <- c(30, 50, 70)\ngrid_multi <- expand.grid(\n  temp   = seq(5, 35, by = 1),\n  rh     = rh_vals\n) |>\n  mutate(county = factor(\"c1\", levels = levels(dat$county)))\n\npr_multi <- marginaleffects::predictions(mod, newdata = grid_multi) |>\n  mutate(rh = factor(rh, levels = rh_vals))\n\nggplot(pr_multi, aes(x = temp, y = estimate, color = rh, fill = rh)) +\n  geom_line() +\n  geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = 0.15, linewidth = 0) +\n  labs(\n    title = \"Response Function f(temp) across RH levels\",\n    subtitle = \"County FE model; E[y|X] evaluated at RH ∈ {30, 50, 70}%\",\n    x = \"Temperature (°C)\",\n    y = \"E[y|X]\",\n    color = \"RH (%)\",\n    fill  = \"RH (%)\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n## Interpretation & extensions\n\n- The lines trace the **predicted outcome** at each °C, holding RH fixed. Nonlinearities (quadratic + interaction) shape the curve.\n- Replace `county` with **unit × time FE** (e.g., `| county + factor(day)`), or add seasonality and trends as needed.\n- To study humidity modulation, vary the `rh` value in `grid` and overlay multiple curves (as above).\n\n## Common pitfalls\n\n- Wrap polynomial terms with `I()` (e.g., `I(temp^2)`) so R treats them as arithmetic.\n- Ensure **factor levels** in `newdata` match the modeling data (`factor(..., levels = levels(dat$factor))`).\n- Predictions do not include FE uncertainty; interpret them as conditional on the chosen FE level.\n\n## References\n\n- `fixest` documentation: `?feols`\n- `marginaleffects` vignettes: `vignette(\"marginaleffects\")` and `?predictions`\n\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}